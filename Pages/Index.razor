@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@inject NavigationManager NavManager
@implements IAsyncDisposable

<title>Blazor SignalR App</title>
<div>
    <label>
        User: <input @bind="_userInput"/>
    </label></div>
<div>
    <label>
        Message: <input @bind="_messageInput"/>
    </label>
</div>
<botton @onclick="Send" disabled="@(IsConnected == false)">Send</botton>
<hr/>
<ul>
    @foreach (var message in _messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection? _hubConnection;
    private readonly List<string> _messages = new();
    private string? _userInput;
    private string? _messageInput;

    public bool IsConnected => _hubConnection?.State == HubConnectionState.Connected;

    protected override async Task OnInitializedAsync()
    {
        var uri = NavManager.ToAbsoluteUri("/chathub");
        var hubConnectionBuilder = new HubConnectionBuilder().WithUrl(uri).WithAutomaticReconnect();
        _hubConnection = hubConnectionBuilder.Build();

        _hubConnection.On<string, string>("ReceiveMessage", (user, message) =>
        {
            _messages.Add($"{user}: {message}");
            InvokeAsync(StateHasChanged);
        });
        //todo: add try catch
        await _hubConnection.StartAsync();
    }

    public async ValueTask DisposeAsync()
    {
        if (_hubConnection != null)
        {
            await _hubConnection.DisposeAsync();
        }
    }

    private async Task Send()
    {
        if (_hubConnection is not null)
        {
            await _hubConnection.SendAsync("SendMessage", _userInput, _messageInput); 
        }
    }
}